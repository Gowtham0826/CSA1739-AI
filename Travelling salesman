from itertools import permutations 
def tsp(dist): 
n = len(dist) 
cities = range(n) 
best = min( 
(sum(dist[path[i]][path[i+1]] for i in range(n-1)) + dist[path[-1]][path[0]], path) 
for path in permutations(cities) 
) 
return best 
# Example distance matrix (symmetric) 
dist = [ 
[0, 1, 3, 4], 
[1, 0, 2, 5], 
[3, 2, 0, 6], 
[4, 5, 6, 0] 
] 
cost, route = tsp(dist) 
print("Cost:", cost) 
print("Route:", route)
